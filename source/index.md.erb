---
title: API Reference

language_tabs:
  - shell
  - php

toc_footers:
 - <a href='mailto:support@wheniwork.com?subject=Developer Key&body=I would like to request a developer key.%0D%0A%0D%0AName:%0D%0AApp Name:%0D%0AEmail:%0D%0A'>Sign Up for a Developer Key</a>
 - <a href='http://wheniwork.com'>Powered by When I Work</a>
---

# Introduction

The When I Work API is thorough, flexible, and restful. It's methods are logically grouped, and follow standard conventions. Make a selection from the left to jump to the method group you would like to know more about.

Feel free to [contact us](http://support.wheniwork.com) if something seems out of place.

## Libraries

> &nbsp;

We currently offer the following API wrappers:

* PHP: [wheniwork-api-php](https://github.com/dolfelt/wheniwork-api-php)

# Authentication

> &nbsp;

Server authentication is based on a token model. The developer will authenticate using a private developer key, along with the user's credentials. Your developer key can be used like the following in the headers.

`W-Key: <%=@wiw_key%>`

Authenticating will return back a token that can be used for all future requests. The token may be included in the headers, as a cookie or in the query string using the key `W-Token`, like the following.

`W-Token: <%=@wiw_token%>`

## Login

> Example Request

```shell
curl <%=@api_prefix%>/2/login \
  --data '{"username":"user@example.com","password":"*******"}' \
  -H "W-Key: <%=@wiw_key%>"
```
```php
<?php
$result = Wheniwork::login(
              "<%=@wiw_key%>",
              "user@example.com",
              "*******"
          );
?>
```
```android
LoginRequestBody loginReq = new LoginRequestBody("user@example.com", "******");
WhenIWorkRestAPI api = WhenIWorkRestAdapter.getApi();
api.login("<%=@wiw_key%>", loginReq, new Callback<LoginResponse>() {

    @Override
    public void success(LoginResponse userAccount, Response response) {
      // Your auth token will be available here in userAccount.getUserToken().
      // Be sure to store it so it can be reused later.
    }

    @Override
    public void failure(RetrofitError error) {
      // Report failure.
    }
});

```

> Example Response

```json
{
  "users": [
    <%= print_json(data.objects['user'], :minimal=>true, :include=>{:token=>@wiw_token}).indent(4) %>
  ],
  "accounts": [

  ]
}
```

>> Be sure to replace `<%=@wiw_key%>` with your requested Developer Key.


The first thing to do after you receive your Developer Key is to login and replace that with a token. This token will be used for all future authenticated requests.

<aside class="notice">
Remember â€” All post bodies must be JSON encoded data (no form data).
</aside>

### Parameters

Key | Description
--------- | -----------
username | <strong>email</strong><br />The email of the user logging in.
password | <strong>string</strong><br />Password of the user logging in.
key | <strong>string</strong><br />Developer key. Can be used instead of `W-Key` in the headers. Do not need both.

Once you have the token, you must include it in all authenticated requests. The `W-Key` does not need to be included.

`W-Token: <%=@wiw_token%>`



## Web App SSO

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/users/autologin \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("users/autologin");
?>
```

> Example Response

```json
{
  "user": <%= print_json(data.objects['user'], :minimal=>true, :include=>{:token=>@wiw_token}).indent(2) %>,
  "hash": "the_auto_login_hash"
}
```


If you find any need to send an authenticated user into the web app without requiring them to login, you can use the
autologin hash query parameter to accomplish this: `al`.

An example would be sending the user to the following URL.

`http://app.wheniwork.com/scheduler?al=the_auto_login_hash`


# Shifts

<%= partial "methods/shifts" %>

# Users

<%= partial "methods/users" %>

# Positions

<%= partial "methods/positions" %>

# Locations

<%= partial "methods/locations" %>

# Sites

<%= partial "methods/sites" %>

# Blocks

<%= partial "methods/blocks" %>

# Requests

<%= partial "methods/requests" %>

# Swaps

<%= partial "methods/swaps" %>

# Availabilities

<%= partial "methods/availabilities" %>

# Payrolls

<%= partial "methods/payrolls" %>

# Times

<%= partial "methods/times" %>

# Batch

<%= partial "methods/batch" %>

# Messages

<%= partial "methods/messages" %>

# Send

<%= partial "methods/send" %>

# Templates

<%= partial "methods/templates" %>

# Plans

<%= partial "methods/plans" %>


# Errors

When I Work uses the following error codes:


Error Code | Meaning
---------- | -------
400 | Bad Request -- The request is not valid
401 | Unauthorized -- The API key is wrong or the query is misplaced
403 | Forbidden -- The request is below the required permission level
404 | Not Found -- The specified request could not be found
405 | Method Not Allowed -- You tried to access a user with an invalid method
406 | Not Acceptable -- You requested a format that isn't JSON
410 | Gone -- The user requested has been removed
418 | An undefined error occurred
429 | Too Many Requests -- The server is not able to address the number of queries
500 | Internal Server Error -- An internal server error occurred
503 | Service Unavailable -- The service temporarily offline for maintenance