> Example Object

<% json do %>
<%= print_json(data.objects['times'], :verbose => true) %>
<% end %>

<%= print_table(data.objects['times'], :header => :time) %>

## Listing Times

> Example Request

```shell
curl <%=@api_prefix%>/2/times \
 -H "W-Token: <%=@wiw_token%>"
```

> Example Response

<% json do %>
{
  "times": [
    <%= print_json(data.objects['times']) %>
  ],
  "punches": [
    <%= print_json(data.objects['punch']) %>,
    <%= print_json(data.objects['punch'], :include => {
      'id' => 150135,
      'type' => 2
    }) %>
  ],
  "shifts": [
    <%= print_json(data.objects['shift']) %>
  ],
  "users": [
    <%= print_json(data.objects['user']) %>
  ],
  "locations": [
    <%= print_json(data.objects['location']) %>
  ]
}
<% end %>

This method allows you to list times or find ones within a specified date range.

### HTTP Request
`GET <%=@api_prefix%>/2/times/`

### Parameters

Key | Description
--- | -----------
<% param "start" do %>Start date of search range<% end %>
<% param "end" do %>End date of search range<% end %>
<% param "user_id" do %>The ID of the user to get times for. To get times for multiple users, you can enter multiple ids separated by commas.<% end %>




## Get Existing Time

> Example Request

```shell
curl <%=@api_prefix%>/2/times/11 \
 -H "W-Token: <%=@wiw_token%>"
```

> Example Response

<% json do %>
{
  "times": [
    <%= print_json(data.objects['times']) %>
  ]
}
<% end %>

### HTTP Request
`GET <%=@api_prefix%>/2/times/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id" do %>ID of the time requested.<% end %>


## Get User Times

> Example Request

```shell
curl <%=@api_prefix%>/2/times/user/4634 \
 -H "W-Token: <%=@wiw_token%>"
```

> Example Response

<% json do %>
{
  "user": {
    "id": 4634,
    "email": "goldiewilson@hillvalleycalifornia.gov",
    "first_name": "Goldie",
    "last_name": "Wilson",
    "positions": [
      32,
      5
    ],
    "locations": [
      136
    ],
    "punch_state": {
      "timestamp": "Wed, 02 Apr 2014 16:21:36 -0500",
      "can_punch_in": false,
      "can_punch_out": true,
      "open_time_id": 158049,
      "near_location_id": null,
      "near_site_id": null,
      "punch_in_shift_id": 1000
    }
  },
  "times": [
    <%= print_json(data.objects['times']) %>
  ],
  "shifts": [
    <%= print_json(data.objects['shift']) %>
  ],
  "locations": [
    <%= print_json(data.objects['location']) %>
  ],
  "positions": [
    <%= print_json(data.objects['position']) %>
  ]
}
<% end %>

This method allows you to get times for a specific user. This request also gives you
the user's punch state.


### HTTP Request
`GET <%=@api_prefix%>/2/times/user/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id" do %>The ID of the user to get times for.<% end %>

<% aside do %>
  This endpoint does not support start and end times for your query. To filter a user's times by a start and end date, use the [Listing Times](#listing-times) endpoint instead.
<% end %>




## Create / Update Times

### Update HTTP Requests
`PUT <%=@api_prefix%>/2/times/{id}`

### Parameters

The `PUT` body can include fields from the [Times Object](#times).


## Clock In

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/times/clockin/ \
 --data '{"id":"14","position_id":"102","coordinates":[44.937422,-93.084009],"accuracy":"20"}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("times/clockin/", array("id":"14","position_id":"102","coordinates":[44.937422,-93.084009],"accuracy":"20"));
?>
```

> Example Post Data

<% json do %>
{
  "id":14,
  "position_id":102,
  "coordinates": [44.937422,-93.084009],
  "accuracy":20
}
<% end %>

> Example Response

<% json do %>
{
  "user": {
    "id": 14,
    "email": "goldiewilson@hillvalleycalifornia.gov",
    "first_name": "Goldie",
    "last_name": "Wilson",
    "punch_state": {
      "timestamp": "Thu, 02 Oct 2014 20:53:40 -0500",
      "can_punch_in": true,
      "can_punch_out": false,
      "open_time_id": 2585161,
      "near_location_id": 100866,
      "near_site_id": null,
      "punch_in_shift_id": null
    }
  },
  "times": [
    <%= print_json(data.objects['times']) %>
  ],
  "locations": [
    <%= print_json(data.objects['location']) %>
  ]
}
<% end %>

### Create A Clock-in
`POST <%=@api_prefix%>/2/times/clockin`



### Post Body

Key | Example Value | Description
--- | ------------- | -------------
id | 14 | The ID of the user you are creating the clock-in for.
position_id | 102 | The ID of the position the user is clocking in as. This is an optional parameter.
coordinates | [44.937422,-93.084009] | The GPS coordinates of the clock-in. This is an optional parameter.
accuracy | 20 | The accuracy in meters of the coordinates being sent.


## Clock out

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/times/clockout/ \
 --data '{"id":"14","position_id":"102","coordinates":[44.937422,-93.084009],"accuracy":"20"}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("times/clockout/", array("id":"14","position_id":"102","coordinates":[44.937422,-93.084009],"accuracy":"20"));
?>
```

> Example Post Data

<% json do %>
{
  "id":14,
  "position_id":102,
  "coordinates": [44.937422,-93.084009],
  "accuracy":20
}
<% end %>

> Example Response

<% json do %>
{
  "user": {
    "id": 14,
    "email": "goldiewilson@hillvalleycalifornia.gov",
    "first_name": "Goldie",
    "last_name": "Wilson",
    "punch_state": {
      "timestamp": "Thu, 02 Oct 2014 20:53:40 -0500",
      "can_punch_out": false,
      "can_punch_out": true,
      "open_time_id": 2585161,
      "near_location_id": 100866,
      "near_site_id": null,
      "punch_out_shift_id": null
    }
  },
  "times": [
    <%= print_json(data.objects['times']) %>
  ],
  "locations": [
    <%= print_json(data.objects['location']) %>
  ]
}
<% end %>

### Create A Clock-out
`POST <%=@api_prefix%>/2/times/clockout`



### Post Body

Key | Example Value | Description
--- | ------------- | -------------
id | 14 | The ID of the user you are creating the clock-out for.
position_id | 102 | The ID of the position the user is clocking out as. This is an optional parameter.
coordinates | [44.937422,-93.084009] | The GPS coordinates of the clock-out. This is an optional parameter.
accuracy | 20 | The accuracy out meters of the coordinates being sent.





## Delete Existing Time

> Example Request

```shell
curl -X DELETE <%=@api_prefix%>/2/times/123 \
 -H "W-Token: <%=@wiw_token%>"
```

> Example Response

<% json do %>
{
  "success": true
}
<% end %>

### HTTP Request
`DELETE <%=@api_prefix%>/2/times/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id" do %>ID of the time object to be deleted.<% end %>







