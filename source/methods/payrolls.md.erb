> Example Object

<% json do %>
<%= print_json(data.objects['payroll'], :verbose => true) %>
<% end %>

<%= print_table(data.objects['payroll'], :header => :payroll) %>

## Listing Payrolls

> Example Request

```shell
curl <%=@api_prefix%>/2/payrolls \
 -H "W-Token: <%=@wiw_token%>"
```

> Example Response

<% json do %>
{
  "payrolls": [
    <%= print_json(data.objects['payroll']) %>,
    <%= print_json(data.objects['payroll'], :include => {
      'id' => 25,
      'start_date' => 'Wed, 12 Feb 2014 00:00:00 -0600',
      'end_date'  =>  'Tue, 25 Feb 2014 00:00:00 -0600'
    }) %>,
    <%= print_json(data.objects['payroll'], :include => {
      'id' => 26,
      'start_date' => 'Wed, 29 Jan 2014 00:00:00 -0600', 
      'end_date'  =>  'Tue, 11 Feb 2014 00:00:00 -0600'
    }) %>
  ]
}
<% end %>

This method allows you to list payroll periods or find ones within a specified date range.

### HTTP Request
`GET <%=@api_prefix%>/2/payrolls/`

### Parameters

Key | Description
--- | -----------
<% param "start", "datetime" do %>Start date of search range<% end %>
<% param "end", "datetime" do %>End date of search range<% end %>




## Get Existing Payroll Period

> Example Request

```shell
curl <%=@api_prefix%>/2/payrolls/24 \
 -H "W-Token: <%=@wiw_token%>"
```

> Example Response

<% json do %>
{
  "payroll": <%= print_json(data.objects['payroll']) %>,
  "payrollhours": [
    <%= print_json(data.objects['payrollhours']) %>,
    <%= print_json(data.objects['payrollhours'], :include => {
      'id' => 101,
      'hours' => 10,
      'rate' => 10,
      'total' => 100
    }) %>,
    <%= print_json(data.objects['payrollhours'], :include => {
      'id' => 102,
      'hours' => 5,
      'rate' => 11,
      'total' => 55
    }) %>
  ]
}
<% end %>

### HTTP Request
`GET <%=@api_prefix%>/2/payrolls/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id" do %>ID of the pay period requested.<% end %>

The `payrollhours` field of the response will include Payroll Hours objects:

<%= print_table(data.objects['payrollhours'], :header => "Payroll Hours") %>

## Payroll Stats

> Example Request

```shell
curl <%=@api_prefix%>/2/payrolls/24/stats \
 -H "W-Token: <%=@wiw_token%>"
```

> Example Response

<% json do %>
{
  "payroll": <%= print_json(data.objects['payroll']) %>,
  "stats": {
    "employees": {
      "4364": {
        "hours": <%= print_json(data.objects['payrollstats']) %>,
        "wages": <%= print_json(data.objects['payrollstats'], :include => {
          'regular' => 800,
          'overtime' => 95.6,
          'double' => 0
        }) %>
      }
    },
    "positions": {
      "32": {
        "hours": <%= print_json(data.objects['payrollstats']) %>,
        "wages": <%= print_json(data.objects['payrollstats'], :include => {
          'regular' => 800,
          'overtime' => 95.6,
          'double' => 0
        }) %>
      }
    },
    "days": [
      <%= print_json(data.objects['payrollstats'], :include => {
        'regular' => 11.89,
        'overtime' => 0,
        'double' => 0
      }) %>,
      <%= print_json(data.objects['payrollstats'], :include => {
        'regular' => 12.28,
        'overtime' => 0,
        'double' => 0
      }) %>,
      <%= print_json(data.objects['payrollstats'], :include => {
        'regular' => 10.42,
        'overtime' => 0,
        'double' => 0
      }) %>,
      <%= print_json(data.objects['payrollstats'], :include => {
        'regular' => 5.41,
        'overtime' => 4.78,
        'double' => 0
      }) %>
    ],
    "locations": {
      "136": {
        "sites": [
          {
            "hours": <%= print_json(data.objects['payrollstats']) %>,
            "wages": <%= print_json(data.objects['payrollstats'], :include => {
              'regular' => 800,
              'overtime' => 95.6,
              'double' => 0
            }) %>
          }
        ]
      }
    }
  },
  "users": [
    <%= print_json(data.objects['user']) %>
  ],
  "locations": [
    <%= print_json(data.objects['location']) %>
  ]
}
<% end %>

This method allows you to request aggregate statistics for a payroll period.

### HTTP Request
`GET <%=@api_prefix%>/2/payrolls/{id}/stats`

### Parameters

Key | Description
--- | -----------
<% param "id" do %>ID of the pay period requested.<% end %>



## Create / Update Payroll

### Update HTTP Requests
`PUT <%=@api_prefix%>/2/payrolls/{id}`

### Parameters

The `PUT` body can include fields from the [Payroll Object](#payrolls).

<% aside do %>
  Payrolls can not be manually created.
<% end %>



## Delete Existing Payroll
&nbsp;
<% aside do %>
  Payrolls can not be deleted.
<% end %>
